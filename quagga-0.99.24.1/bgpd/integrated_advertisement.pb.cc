// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: integrated_advertisement.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "integrated_advertisement.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* IntegratedAdvertisement_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IntegratedAdvertisement_reflection_ = NULL;
const ::google::protobuf::Descriptor* PathGroupDescriptor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PathGroupDescriptor_reflection_ = NULL;
const ::google::protobuf::Descriptor* HopDescriptor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HopDescriptor_reflection_ = NULL;
const ::google::protobuf::Descriptor* KeyValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KeyValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* PathCost_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PathCost_reflection_ = NULL;
const ::google::protobuf::Descriptor* LastWiserNode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LastWiserNode_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Protocol_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_integrated_5fadvertisement_2eproto() {
  protobuf_AddDesc_integrated_5fadvertisement_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "integrated_advertisement.proto");
  GOOGLE_CHECK(file != NULL);
  IntegratedAdvertisement_descriptor_ = file->message_type(0);
  static const int IntegratedAdvertisement_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntegratedAdvertisement, path_group_descriptors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntegratedAdvertisement, hop_descriptors_),
  };
  IntegratedAdvertisement_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      IntegratedAdvertisement_descriptor_,
      IntegratedAdvertisement::default_instance_,
      IntegratedAdvertisement_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntegratedAdvertisement, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntegratedAdvertisement, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(IntegratedAdvertisement));
  PathGroupDescriptor_descriptor_ = file->message_type(1);
  static const int PathGroupDescriptor_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PathGroupDescriptor, protocol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PathGroupDescriptor, key_values_),
  };
  PathGroupDescriptor_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PathGroupDescriptor_descriptor_,
      PathGroupDescriptor::default_instance_,
      PathGroupDescriptor_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PathGroupDescriptor, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PathGroupDescriptor, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PathGroupDescriptor));
  HopDescriptor_descriptor_ = file->message_type(2);
  static const int HopDescriptor_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HopDescriptor, protocol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HopDescriptor, key_values_),
  };
  HopDescriptor_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HopDescriptor_descriptor_,
      HopDescriptor::default_instance_,
      HopDescriptor_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HopDescriptor, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HopDescriptor, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HopDescriptor));
  KeyValue_descriptor_ = file->message_type(3);
  static const int KeyValue_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue, value_),
  };
  KeyValue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      KeyValue_descriptor_,
      KeyValue::default_instance_,
      KeyValue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(KeyValue));
  PathCost_descriptor_ = file->message_type(4);
  static const int PathCost_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PathCost, path_cost_),
  };
  PathCost_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PathCost_descriptor_,
      PathCost::default_instance_,
      PathCost_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PathCost, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PathCost, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PathCost));
  LastWiserNode_descriptor_ = file->message_type(5);
  static const int LastWiserNode_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LastWiserNode, last_wiser_),
  };
  LastWiserNode_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LastWiserNode_descriptor_,
      LastWiserNode::default_instance_,
      LastWiserNode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LastWiserNode, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LastWiserNode, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LastWiserNode));
  Protocol_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_integrated_5fadvertisement_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    IntegratedAdvertisement_descriptor_, &IntegratedAdvertisement::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PathGroupDescriptor_descriptor_, &PathGroupDescriptor::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HopDescriptor_descriptor_, &HopDescriptor::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    KeyValue_descriptor_, &KeyValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PathCost_descriptor_, &PathCost::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LastWiserNode_descriptor_, &LastWiserNode::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_integrated_5fadvertisement_2eproto() {
  delete IntegratedAdvertisement::default_instance_;
  delete IntegratedAdvertisement_reflection_;
  delete PathGroupDescriptor::default_instance_;
  delete PathGroupDescriptor_reflection_;
  delete HopDescriptor::default_instance_;
  delete HopDescriptor_reflection_;
  delete KeyValue::default_instance_;
  delete KeyValue_reflection_;
  delete PathCost::default_instance_;
  delete PathCost_reflection_;
  delete LastWiserNode::default_instance_;
  delete LastWiserNode_reflection_;
}

void protobuf_AddDesc_integrated_5fadvertisement_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036integrated_advertisement.proto\"x\n\027Inte"
    "gratedAdvertisement\0224\n\026path_group_descri"
    "ptors\030\001 \003(\0132\024.PathGroupDescriptor\022\'\n\017hop"
    "_descriptors\030\002 \003(\0132\016.HopDescriptor\"Q\n\023Pa"
    "thGroupDescriptor\022\033\n\010protocol\030\001 \001(\0162\t.Pr"
    "otocol\022\035\n\nkey_values\030\002 \003(\0132\t.KeyValue\"K\n"
    "\rHopDescriptor\022\033\n\010protocol\030\001 \001(\0162\t.Proto"
    "col\022\035\n\nkey_values\030\002 \003(\0132\t.KeyValue\"&\n\010Ke"
    "yValue\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"\035\n\010Pa"
    "thCost\022\021\n\tpath_cost\030\001 \001(\r\"#\n\rLastWiserNo"
    "de\022\022\n\nlast_wiser\030\001 \003(\r*F\n\010Protocol\022\r\n\tP_"
    "UNKNOWN\020\000\022\013\n\007P_WISER\020\001\022\016\n\nP_PATHLETS\020\002\022\016"
    "\n\nP_BASELINE\020\003", 494);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "integrated_advertisement.proto", &protobuf_RegisterTypes);
  IntegratedAdvertisement::default_instance_ = new IntegratedAdvertisement();
  PathGroupDescriptor::default_instance_ = new PathGroupDescriptor();
  HopDescriptor::default_instance_ = new HopDescriptor();
  KeyValue::default_instance_ = new KeyValue();
  PathCost::default_instance_ = new PathCost();
  LastWiserNode::default_instance_ = new LastWiserNode();
  IntegratedAdvertisement::default_instance_->InitAsDefaultInstance();
  PathGroupDescriptor::default_instance_->InitAsDefaultInstance();
  HopDescriptor::default_instance_->InitAsDefaultInstance();
  KeyValue::default_instance_->InitAsDefaultInstance();
  PathCost::default_instance_->InitAsDefaultInstance();
  LastWiserNode::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_integrated_5fadvertisement_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_integrated_5fadvertisement_2eproto {
  StaticDescriptorInitializer_integrated_5fadvertisement_2eproto() {
    protobuf_AddDesc_integrated_5fadvertisement_2eproto();
  }
} static_descriptor_initializer_integrated_5fadvertisement_2eproto_;
const ::google::protobuf::EnumDescriptor* Protocol_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Protocol_descriptor_;
}
bool Protocol_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int IntegratedAdvertisement::kPathGroupDescriptorsFieldNumber;
const int IntegratedAdvertisement::kHopDescriptorsFieldNumber;
#endif  // !_MSC_VER

IntegratedAdvertisement::IntegratedAdvertisement()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IntegratedAdvertisement)
}

void IntegratedAdvertisement::InitAsDefaultInstance() {
}

IntegratedAdvertisement::IntegratedAdvertisement(const IntegratedAdvertisement& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:IntegratedAdvertisement)
}

void IntegratedAdvertisement::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IntegratedAdvertisement::~IntegratedAdvertisement() {
  // @@protoc_insertion_point(destructor:IntegratedAdvertisement)
  SharedDtor();
}

void IntegratedAdvertisement::SharedDtor() {
  if (this != default_instance_) {
  }
}

void IntegratedAdvertisement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IntegratedAdvertisement::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IntegratedAdvertisement_descriptor_;
}

const IntegratedAdvertisement& IntegratedAdvertisement::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_integrated_5fadvertisement_2eproto();
  return *default_instance_;
}

IntegratedAdvertisement* IntegratedAdvertisement::default_instance_ = NULL;

IntegratedAdvertisement* IntegratedAdvertisement::New() const {
  return new IntegratedAdvertisement;
}

void IntegratedAdvertisement::Clear() {
  path_group_descriptors_.Clear();
  hop_descriptors_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool IntegratedAdvertisement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IntegratedAdvertisement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PathGroupDescriptor path_group_descriptors = 1;
      case 1: {
        if (tag == 10) {
         parse_path_group_descriptors:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_path_group_descriptors()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_path_group_descriptors;
        if (input->ExpectTag(18)) goto parse_hop_descriptors;
        break;
      }

      // repeated .HopDescriptor hop_descriptors = 2;
      case 2: {
        if (tag == 18) {
         parse_hop_descriptors:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hop_descriptors()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_hop_descriptors;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IntegratedAdvertisement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IntegratedAdvertisement)
  return false;
#undef DO_
}

void IntegratedAdvertisement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IntegratedAdvertisement)
  // repeated .PathGroupDescriptor path_group_descriptors = 1;
  for (int i = 0; i < this->path_group_descriptors_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->path_group_descriptors(i), output);
  }

  // repeated .HopDescriptor hop_descriptors = 2;
  for (int i = 0; i < this->hop_descriptors_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hop_descriptors(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:IntegratedAdvertisement)
}

::google::protobuf::uint8* IntegratedAdvertisement::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:IntegratedAdvertisement)
  // repeated .PathGroupDescriptor path_group_descriptors = 1;
  for (int i = 0; i < this->path_group_descriptors_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->path_group_descriptors(i), target);
  }

  // repeated .HopDescriptor hop_descriptors = 2;
  for (int i = 0; i < this->hop_descriptors_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hop_descriptors(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IntegratedAdvertisement)
  return target;
}

int IntegratedAdvertisement::ByteSize() const {
  int total_size = 0;

  // repeated .PathGroupDescriptor path_group_descriptors = 1;
  total_size += 1 * this->path_group_descriptors_size();
  for (int i = 0; i < this->path_group_descriptors_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->path_group_descriptors(i));
  }

  // repeated .HopDescriptor hop_descriptors = 2;
  total_size += 1 * this->hop_descriptors_size();
  for (int i = 0; i < this->hop_descriptors_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hop_descriptors(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IntegratedAdvertisement::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const IntegratedAdvertisement* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const IntegratedAdvertisement*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IntegratedAdvertisement::MergeFrom(const IntegratedAdvertisement& from) {
  GOOGLE_CHECK_NE(&from, this);
  path_group_descriptors_.MergeFrom(from.path_group_descriptors_);
  hop_descriptors_.MergeFrom(from.hop_descriptors_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void IntegratedAdvertisement::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntegratedAdvertisement::CopyFrom(const IntegratedAdvertisement& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntegratedAdvertisement::IsInitialized() const {

  return true;
}

void IntegratedAdvertisement::Swap(IntegratedAdvertisement* other) {
  if (other != this) {
    path_group_descriptors_.Swap(&other->path_group_descriptors_);
    hop_descriptors_.Swap(&other->hop_descriptors_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata IntegratedAdvertisement::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IntegratedAdvertisement_descriptor_;
  metadata.reflection = IntegratedAdvertisement_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PathGroupDescriptor::kProtocolFieldNumber;
const int PathGroupDescriptor::kKeyValuesFieldNumber;
#endif  // !_MSC_VER

PathGroupDescriptor::PathGroupDescriptor()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PathGroupDescriptor)
}

void PathGroupDescriptor::InitAsDefaultInstance() {
}

PathGroupDescriptor::PathGroupDescriptor(const PathGroupDescriptor& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PathGroupDescriptor)
}

void PathGroupDescriptor::SharedCtor() {
  _cached_size_ = 0;
  protocol_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PathGroupDescriptor::~PathGroupDescriptor() {
  // @@protoc_insertion_point(destructor:PathGroupDescriptor)
  SharedDtor();
}

void PathGroupDescriptor::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PathGroupDescriptor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PathGroupDescriptor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PathGroupDescriptor_descriptor_;
}

const PathGroupDescriptor& PathGroupDescriptor::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_integrated_5fadvertisement_2eproto();
  return *default_instance_;
}

PathGroupDescriptor* PathGroupDescriptor::default_instance_ = NULL;

PathGroupDescriptor* PathGroupDescriptor::New() const {
  return new PathGroupDescriptor;
}

void PathGroupDescriptor::Clear() {
  protocol_ = 0;
  key_values_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PathGroupDescriptor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PathGroupDescriptor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Protocol protocol = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Protocol_IsValid(value)) {
            set_protocol(static_cast< ::Protocol >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_key_values;
        break;
      }

      // repeated .KeyValue key_values = 2;
      case 2: {
        if (tag == 18) {
         parse_key_values:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_key_values()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_key_values;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PathGroupDescriptor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PathGroupDescriptor)
  return false;
#undef DO_
}

void PathGroupDescriptor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PathGroupDescriptor)
  // optional .Protocol protocol = 1;
  if (has_protocol()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->protocol(), output);
  }

  // repeated .KeyValue key_values = 2;
  for (int i = 0; i < this->key_values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->key_values(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PathGroupDescriptor)
}

::google::protobuf::uint8* PathGroupDescriptor::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PathGroupDescriptor)
  // optional .Protocol protocol = 1;
  if (has_protocol()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->protocol(), target);
  }

  // repeated .KeyValue key_values = 2;
  for (int i = 0; i < this->key_values_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->key_values(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PathGroupDescriptor)
  return target;
}

int PathGroupDescriptor::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Protocol protocol = 1;
    if (has_protocol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->protocol());
    }

  }
  // repeated .KeyValue key_values = 2;
  total_size += 1 * this->key_values_size();
  for (int i = 0; i < this->key_values_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->key_values(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PathGroupDescriptor::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PathGroupDescriptor* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PathGroupDescriptor*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PathGroupDescriptor::MergeFrom(const PathGroupDescriptor& from) {
  GOOGLE_CHECK_NE(&from, this);
  key_values_.MergeFrom(from.key_values_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_protocol()) {
      set_protocol(from.protocol());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PathGroupDescriptor::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PathGroupDescriptor::CopyFrom(const PathGroupDescriptor& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PathGroupDescriptor::IsInitialized() const {

  return true;
}

void PathGroupDescriptor::Swap(PathGroupDescriptor* other) {
  if (other != this) {
    std::swap(protocol_, other->protocol_);
    key_values_.Swap(&other->key_values_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PathGroupDescriptor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PathGroupDescriptor_descriptor_;
  metadata.reflection = PathGroupDescriptor_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HopDescriptor::kProtocolFieldNumber;
const int HopDescriptor::kKeyValuesFieldNumber;
#endif  // !_MSC_VER

HopDescriptor::HopDescriptor()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HopDescriptor)
}

void HopDescriptor::InitAsDefaultInstance() {
}

HopDescriptor::HopDescriptor(const HopDescriptor& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HopDescriptor)
}

void HopDescriptor::SharedCtor() {
  _cached_size_ = 0;
  protocol_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HopDescriptor::~HopDescriptor() {
  // @@protoc_insertion_point(destructor:HopDescriptor)
  SharedDtor();
}

void HopDescriptor::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HopDescriptor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HopDescriptor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HopDescriptor_descriptor_;
}

const HopDescriptor& HopDescriptor::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_integrated_5fadvertisement_2eproto();
  return *default_instance_;
}

HopDescriptor* HopDescriptor::default_instance_ = NULL;

HopDescriptor* HopDescriptor::New() const {
  return new HopDescriptor;
}

void HopDescriptor::Clear() {
  protocol_ = 0;
  key_values_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HopDescriptor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HopDescriptor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Protocol protocol = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Protocol_IsValid(value)) {
            set_protocol(static_cast< ::Protocol >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_key_values;
        break;
      }

      // repeated .KeyValue key_values = 2;
      case 2: {
        if (tag == 18) {
         parse_key_values:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_key_values()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_key_values;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HopDescriptor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HopDescriptor)
  return false;
#undef DO_
}

void HopDescriptor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HopDescriptor)
  // optional .Protocol protocol = 1;
  if (has_protocol()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->protocol(), output);
  }

  // repeated .KeyValue key_values = 2;
  for (int i = 0; i < this->key_values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->key_values(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HopDescriptor)
}

::google::protobuf::uint8* HopDescriptor::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HopDescriptor)
  // optional .Protocol protocol = 1;
  if (has_protocol()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->protocol(), target);
  }

  // repeated .KeyValue key_values = 2;
  for (int i = 0; i < this->key_values_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->key_values(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HopDescriptor)
  return target;
}

int HopDescriptor::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Protocol protocol = 1;
    if (has_protocol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->protocol());
    }

  }
  // repeated .KeyValue key_values = 2;
  total_size += 1 * this->key_values_size();
  for (int i = 0; i < this->key_values_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->key_values(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HopDescriptor::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HopDescriptor* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HopDescriptor*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HopDescriptor::MergeFrom(const HopDescriptor& from) {
  GOOGLE_CHECK_NE(&from, this);
  key_values_.MergeFrom(from.key_values_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_protocol()) {
      set_protocol(from.protocol());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HopDescriptor::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HopDescriptor::CopyFrom(const HopDescriptor& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HopDescriptor::IsInitialized() const {

  return true;
}

void HopDescriptor::Swap(HopDescriptor* other) {
  if (other != this) {
    std::swap(protocol_, other->protocol_);
    key_values_.Swap(&other->key_values_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HopDescriptor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HopDescriptor_descriptor_;
  metadata.reflection = HopDescriptor_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int KeyValue::kKeyFieldNumber;
const int KeyValue::kValueFieldNumber;
#endif  // !_MSC_VER

KeyValue::KeyValue()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyValue)
}

void KeyValue::InitAsDefaultInstance() {
}

KeyValue::KeyValue(const KeyValue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:KeyValue)
}

void KeyValue::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

KeyValue::~KeyValue() {
  // @@protoc_insertion_point(destructor:KeyValue)
  SharedDtor();
}

void KeyValue::SharedDtor() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (this != default_instance_) {
  }
}

void KeyValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KeyValue_descriptor_;
}

const KeyValue& KeyValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_integrated_5fadvertisement_2eproto();
  return *default_instance_;
}

KeyValue* KeyValue::default_instance_ = NULL;

KeyValue* KeyValue::New() const {
  return new KeyValue;
}

void KeyValue::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_key()) {
      if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        key_->clear();
      }
    }
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        value_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool KeyValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeyValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeyValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeyValue)
  return false;
#undef DO_
}

void KeyValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeyValue)
  // optional string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:KeyValue)
}

::google::protobuf::uint8* KeyValue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:KeyValue)
  // optional string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyValue)
  return target;
}

int KeyValue::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyValue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const KeyValue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const KeyValue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void KeyValue::MergeFrom(const KeyValue& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void KeyValue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValue::CopyFrom(const KeyValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValue::IsInitialized() const {

  return true;
}

void KeyValue::Swap(KeyValue* other) {
  if (other != this) {
    std::swap(key_, other->key_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata KeyValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KeyValue_descriptor_;
  metadata.reflection = KeyValue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PathCost::kPathCostFieldNumber;
#endif  // !_MSC_VER

PathCost::PathCost()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PathCost)
}

void PathCost::InitAsDefaultInstance() {
}

PathCost::PathCost(const PathCost& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PathCost)
}

void PathCost::SharedCtor() {
  _cached_size_ = 0;
  path_cost_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PathCost::~PathCost() {
  // @@protoc_insertion_point(destructor:PathCost)
  SharedDtor();
}

void PathCost::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PathCost::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PathCost::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PathCost_descriptor_;
}

const PathCost& PathCost::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_integrated_5fadvertisement_2eproto();
  return *default_instance_;
}

PathCost* PathCost::default_instance_ = NULL;

PathCost* PathCost::New() const {
  return new PathCost;
}

void PathCost::Clear() {
  path_cost_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PathCost::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PathCost)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 path_cost = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &path_cost_)));
          set_has_path_cost();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PathCost)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PathCost)
  return false;
#undef DO_
}

void PathCost::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PathCost)
  // optional uint32 path_cost = 1;
  if (has_path_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->path_cost(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PathCost)
}

::google::protobuf::uint8* PathCost::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PathCost)
  // optional uint32 path_cost = 1;
  if (has_path_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->path_cost(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PathCost)
  return target;
}

int PathCost::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 path_cost = 1;
    if (has_path_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->path_cost());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PathCost::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PathCost* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PathCost*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PathCost::MergeFrom(const PathCost& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path_cost()) {
      set_path_cost(from.path_cost());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PathCost::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PathCost::CopyFrom(const PathCost& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PathCost::IsInitialized() const {

  return true;
}

void PathCost::Swap(PathCost* other) {
  if (other != this) {
    std::swap(path_cost_, other->path_cost_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PathCost::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PathCost_descriptor_;
  metadata.reflection = PathCost_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LastWiserNode::kLastWiserFieldNumber;
#endif  // !_MSC_VER

LastWiserNode::LastWiserNode()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LastWiserNode)
}

void LastWiserNode::InitAsDefaultInstance() {
}

LastWiserNode::LastWiserNode(const LastWiserNode& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LastWiserNode)
}

void LastWiserNode::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LastWiserNode::~LastWiserNode() {
  // @@protoc_insertion_point(destructor:LastWiserNode)
  SharedDtor();
}

void LastWiserNode::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LastWiserNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LastWiserNode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LastWiserNode_descriptor_;
}

const LastWiserNode& LastWiserNode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_integrated_5fadvertisement_2eproto();
  return *default_instance_;
}

LastWiserNode* LastWiserNode::default_instance_ = NULL;

LastWiserNode* LastWiserNode::New() const {
  return new LastWiserNode;
}

void LastWiserNode::Clear() {
  last_wiser_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LastWiserNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LastWiserNode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 last_wiser = 1;
      case 1: {
        if (tag == 8) {
         parse_last_wiser:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_last_wiser())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_last_wiser())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_last_wiser;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LastWiserNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LastWiserNode)
  return false;
#undef DO_
}

void LastWiserNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LastWiserNode)
  // repeated uint32 last_wiser = 1;
  for (int i = 0; i < this->last_wiser_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->last_wiser(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LastWiserNode)
}

::google::protobuf::uint8* LastWiserNode::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LastWiserNode)
  // repeated uint32 last_wiser = 1;
  for (int i = 0; i < this->last_wiser_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->last_wiser(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LastWiserNode)
  return target;
}

int LastWiserNode::ByteSize() const {
  int total_size = 0;

  // repeated uint32 last_wiser = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->last_wiser_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->last_wiser(i));
    }
    total_size += 1 * this->last_wiser_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LastWiserNode::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LastWiserNode* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LastWiserNode*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LastWiserNode::MergeFrom(const LastWiserNode& from) {
  GOOGLE_CHECK_NE(&from, this);
  last_wiser_.MergeFrom(from.last_wiser_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LastWiserNode::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LastWiserNode::CopyFrom(const LastWiserNode& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LastWiserNode::IsInitialized() const {

  return true;
}

void LastWiserNode::Swap(LastWiserNode* other) {
  if (other != this) {
    last_wiser_.Swap(&other->last_wiser_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LastWiserNode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LastWiserNode_descriptor_;
  metadata.reflection = LastWiserNode_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
