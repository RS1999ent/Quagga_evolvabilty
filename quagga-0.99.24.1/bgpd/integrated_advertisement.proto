syntax ="proto2";

// The protocol that varies key values are associated with
enum Protocol {
  P_UNKNOWN = 0;
  P_WISER = 1;
  P_PATHLETS = 2;
  P_BASELINE = 3;
}

// The toplevel message of a simple integrated advertisement (doesn't encode
// aggregation support yet). 'PathGroupDescriptor's correspond to the simple
// PathDescriptor described earlier in the paper when aggregation wasn't
// introduced.
message IntegratedAdvertisement {
  repeated PathGroupDescriptor path_group_descriptors = 1;
  repeated HopDescriptor hop_descriptors = 2;
  
}

// Describes general variables required for a particular protocol corresponding
// to a path.  
message PathGroupDescriptor {
  optional Protocol protocol = 1; // required
  repeated KeyValue key_values = 2; 

}

// Corresponds to hop descriptors in the paper.
message HopDescriptor{
  optional uint32 island_id = 1; //required
  optional Protocol protocol = 2; // required
  repeated KeyValue key_values = 3; 
}


// Holds a unit of information. The 'key' is a plain string format and human
// readable so that all protocols can potentially understand it. The 'value' is
// a serialzed protobuf of some protobuf message that a protocol associated with
// this KeyValue (or protocols that share this KeyValue) can understand.
message KeyValue {
  optional string key = 1;
  optional string value = 2;
}


// PROTOCOL SPECIFIC MESSAGES BELOW HERE

// Holds a wiser path cost
message PathCost {
  optional uint32 path_cost = 1;
}

// Holds the last wiser node that updated the path cost. Used for calculating
// normalization.
message LastWiserNode {
  repeated uint32 last_wiser = 1;
}

// Pathlet message below here
// HOlds a series of pathlets (usually forming a graph)
message Pathlets{
  repeated Pathlet pathlets = 1;
}

// Holds an individual pathlet.
message Pathlet {
  optional uint32 fid = 1; // The fid associated with the link
  repeated uint32 vnodes = 2; //This will contain two entries only that denote a
                              //link that the FID is associated with
  // Ip assocated with the end of the pathlet
  optional string destination = 3;
  // pathlet path vector
  repeated uint32 path_vector = 4;
}